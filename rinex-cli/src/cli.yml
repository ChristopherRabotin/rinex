name: rinex-cli
version: "0.3.0"
author: Guillaume W. Bres <guillaume.bressaix@gmail.com>
args:
    - filepath:
        short: f
        long: filepath
        required: false 
        takes_value: true
        help: |
            List of local RINEX files, seperated by a comma.
            Example: --filepath AMEL00NLD_R_20210010000_01D_MN.rnx
            Example: -f amel0010.21g,BRDC00GOP_R_20210010000_01D_MN.rnx.gz 
    - output:
        long: output
        required: false
        takes_value: true
        help: |
            Comma separated list of file to generate. 
            This is only used when requested operations will generate a new RINEX.
            Example: --output brdcxx01.21g
            Use a list when generate several files in a row:
            Example: --output brdcxx01.21g,brdcxx02.21g
    - header:
        short: h
        long: header
        takes_value: false
        help: Display identified header information 
    - decim-ratio:
        short: d
        long: decim-ratio
        takes_value: true
        help: |
            Decimate data quantity by an integer ratio. 
            For example, --decim-ratio 2 will shrink a,b,c,d,e,f epochs to a,c,e
    - decim-interval:
        long: decim-interval 
        takes_value: true
        help: |
            Decimate data record to minimum interval duration.
            Duration must be specified in %HH:%MM:%SS format, example:
            Example: 1' interval: --decim-interval 00:01:00
            Example: 12h interval: --decim-interval 12:00:00
            Example: 3d interval: --decim-interval 72:00:00
    - diff:
        long: diff
        takes_value: false
        help: |
            Process RINEX differentiation (rnx = rnx(a)-rnx(b))
            to cancel ionospheric biases.
            User must provide at least two Observation RINEX files for this op to work.
            Example: differentiate brdc01.g with brdc02.g: 
            rinex-cli --diff -f brdc01.g,brdc02.g
            Example: same differentiation, but also differentiate brdc03.g with brdc04g 
            rinex-cli --diff -f brdc01.g,brdc02.g,brdc03.g,brdc04.g
    - ddiff:
        long: ddiff
        takes_value: false
        help: |
            Process double RINEX differentiation (rnx = rnx(a)-rnx(b))
            with inner space vehicule differentiation,
            to cancel ionospheric biases and clock induced biases. 
            User must provide at least two Observation RINEX files for this op to work.
            Example: differentiate brdc01.g with brdc02.g and double differentiate brdc01.g: 
            rinex-cli --ddiff -f brdc01.g,brdc02.g
            Example: same differentiation, but compute also on brdc03.g with brdc04g 
            rinex-cli --ddiff -f brdc01.g,brdc02.g,brdc03.g,brdc04.g
    - cycle-slips:
        long: cycle-slips
        help: Display epochs where clock cycle slip event possibly happened.
    - confirm-cycle-slips:
        long: confirm-cycle-slips
        help: |
            Perform dual RINEX differentiation and post-processing,
            to confirm cycle slip events. For this op, we expect the 
            same restriction than the --ddiff requirements.
            User must provide at least two Observation RINEX files for this op to work.
            Example: confirm cycle slips in brdc01.g using brdc02.g:
            rinex-cli --confirm-cycle-slips -f brdc01.g,brdc02.g
            Example: same processing, but also confirm cycle slips in brdc03.g using brdc04.g:
            rinex-cli --confirm-cycle-slips -f brdc00.g,brdc02.g,brdc03.g,brdc04.g
    - time-window:
        short: t
        long: time-window
        help: |
            Shrink RINEX record to specified epoch interval,
            Example: -t "2022-08-01-12:00:00-2022-08-10-13:00:00"
            will retain epochs after 2022/08/01 12:00:00 included
            and prior 2022/08/01 13:00:00 included.
    - epoch-ok-filter:
        long: epoch-ok-filter 
        takes_value: false 
        help: Retains epochs that have an EpochFlag::Ok value only 
    - epoch-nok-filter:
        long: epoch-nok-filter
        takes_value: false
        help: |
            Retains epochs that do not have an EpochFlag::Ok attached to them.
            Epoch NOK can mean power failure, or antenna movement, etc..
    - epoch:
        short: e 
        long: epoch 
        takes_value: false 
        help: Display identified epochs in given file(s) 
    - observ:
        short: o
        long: observ
        takes_value: false
        help: Display observables epochs in given file(s) 
    - observ-filter:
        long: observ-filter 
        takes_value: true
        help: Comma separated list of Observables - retain only matching Observable codes 
    - sv:
        long: sv
        takes_value: false
        help: Display vehicules identified in this file
    - sv-per-epoch:
        long: sv-per-epoch
        takes_value: false
        help: Display vehicules identified for each epoch in this file
    - clock-systems-per-epoch:
        long: clock-systems-per-epoch
        takes_value: false
        help: Display Clock Data systems identified in given Clock RINEX file(s)
    - clock-offsets:
        long: clock-offsets
        takes_value: false
        help: |
            Display receiver clock offsets for each epoch that came with such information, 
            in given Observation RINEX file(s)
    - constellation:
        long: constellation
        takes_value: false
        help: Display identified Constellations in this file
    - constellation-filter:
        long: constellation-filter
        takes_value: true
        help: Comma seperated list of Constellations - retain only data recorded against those constellations
    - sampling-interval:
        long: sampling_interval
        takes_value: false
        help: Print sampling interval of this record
    - sv-filter:
        long: sv-filter
        takes_value: true
        help: |
            Comma separated Satellite Vehicule filter. Retain only matching Satellite Vehicules.
            Example focus on R01: rinex-cli --sv-filter R01 -f rinex.txt
            Example focus on R01,G26: rinex-cli --sv-filter R01,G26 -f rinex.txt
    - lli-mask:
        long: lli-mask
        takes_value: true 
        help: Apply LLI And() mask to entire record 
    - ssi-range:
        long: ssi-range
        takes_value: false
        help: Display range of SSI (RX signal strength) for given Observation File(s)
    - ssi:
        long: ssi
        takes_value: true 
        help: |
            Retain only Observations that have at least this SSI signal strength indication attached to them (x > SSI is retained).
            For example: --ssi 5 for "Ok" filter
            For example: --ssi 7 for "Very Good" quality filter
            For example: --ssi 8 for "Ultra high" quality filter
    - distance:
        long: distance 
        takes_value: true
        help: |
            Converts (all encountered) pseudo range measurements to physical distance. 
            User must pass receiver clock offset for this calculation (refer to doc)
    - events:
        long: events
        takes_value: false 
        help: Display epoch events registered in the record, only releavant on Observation Data records
    - event-filter:
        long: event-filter
        takes_value: true
        help: Retain only data that match given Epoch Event flag
    - gaps:
        long: gaps
        takes_value: false
        help: Display (unexpected) data gaps - period without any data larger than expected sampling interval
    - largest-gap:
        long: largest-gap
        takes_value: false
        help: Display largest data gap encountered in given records
    - merge:
        short: m
        long: merge
        takes_value: false
        help: |
            Merge given files together. Avoid combining this one with other operations.
            Example merge brdc01g with brdc02g into "rinex.txt": rinex-cli -m -f brdc01.g,brdc02.g
            Example merge brdc01g with brdc02g into "brdc03.g": rinex-cli -m -f brdc01.g,brdc02.g -o brdc03.g
    - split:
        short: s
        long: split
        min_values: 0
        takes_value: true
        help: |
            Split RINEX into two.
            If no epoch specified (empty argument), we assume this is a merged RINEX,
            and we split at the epoch boundary.
            Example: --split
            If an epoch is specified, we split at the given epoch.
            Epoch is specified in "%Y-%m-%d %H:%M:%S" format.
            Example: --split "2000-01-01 00:00:00"
            Example: --split "2022-01-01 12:00:00"
            If an epoch flag must be matched, specify it also, 
            Example: --split "2022-01-01 12:00:00 Ok"
    - plot:
        short: p
        long: plot
        help: |
            When no display arguments are given (like --observ for instance), 
            the inner record(s) (possibly filtered and cleanedup) gets printed.
            Use --plot to convert this into a graphical view instead of a terminal output.
    - pretty:
        long: pretty
        help: Make displayed structures more readable
    - teqc-plot:
        long: teqc-plot
        help: |
            Generates a `teqc` like ASCII plot that showcases all satellite vehicules status, rx clock and much more..
            over the course of this file. X axis will span all epochs contained in this file (can be longer than 24h).
    - teqc-report:
        long: teqc-report
        help: |
            Generates a `teqc` like report where you can find similar information.
